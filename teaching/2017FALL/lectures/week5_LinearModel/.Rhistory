install.packages("ElemStatLearn")
prostate
library(ElemStatLearn)
str(prostate)
prostate$train
?prostate
library(ElemStatLearn)
str(prostate)
plot(prostate$gleason, prostate$pgg45)
?prostate
cor_prostate <- cor(prostate)
max(cor_prostate[cor_prostate!=1])
arrayInd(which(max(cor_prostate[cor_prostate!=1]) == cor_prostate), dim(cor_prostate))
maxID <- arrayInd(which(max(cor_prostate[cor_prostate!=1]) == cor_prostate), dim(cor_prostate))
names(prostate[maxID])
names(prostate[maxID[1,]])
pairs(prostate)
names(prostate)
lm_prostate <- lm(gleason ~ age + lweight, data = prostate)
lm_prostate
prostate$lweight
predict(object = lm_prostate, anew)
anew <- data.frame(age = 65, lweight=4)
predict(object = lm_prostate, anew)
?lm
lm_all <- lm(lpsa ~ ., data=prostate)
library(ElemStatLearn)
str(prostate)
prostate$train <- NULL
lm_all <- lm(lpsa ~ ., data=prostate)
lm_all
?formula
names(prostate)
str(prostate)
prostate(prostate$svi)
table(prostate$svi)
lm_interaction2 <- lm(lpsa ~ lcavol * svi, data=prostate) ##
lm_interaction2
?step
step(lm_all)
step(lm_all, direction = "forward")
step(lm_interaction, direction = "forward")
lm_interaction <- lm(lpsa ~ lcavol + svi + lcavol:svi, data=prostate) ## : represent interaction term.
step(lm_interaction, direction = "forward")
AIC
BIC
step(lm_all)
step
AIC(lm_all)
names(lm_all)
names(summary(lm_all))
AIC
?AIC
step(lm_all)
AIC(lm_all)
AIC(lm(lpsa ~ . - gleason, data=prostate))
216.4952 - 214.6058
-60.779 - -62.668
ttt <- step(lm(lpsa ~ ., data=prostate))
names(ttt)
ttt$coefficients
ttt$anova
stepDetails <- step(lm(lpsa ~ ., data=prostate))$anova
stepDetails$AIC
?step
library(MASS)
lm_ridge <- lm.ridge(lpsa ~ ., data=prostate)
library(ElemStatLearn)
lm_ridge <- lm.ridge(lpsa ~ ., data=prostate)
lm_ridge
library(lars)
install.packages('lars')
library(lars)
?lars
prostate
library(ElemStatLearn)
str(prostate)
prostate$train <- NULL
lars(x = prostate[,-9], y = prostate[,9])
lars(x = prostate[,9], y = prostate[,-9])
prostate[,9]
prostate[,-9]
prostate[,-9]
prostate[,9]
data(diabetes)
diabetes
names(diabetes)
diabetes$x
diabetes$y
class(diabetes$x)
class(diabetes$y)
class(diabetes$x)
library(lars)
x <- prostate[,1:8]
y <- prostate[,9]
lars(x, y)
head(diabetes$x)
diabetes$x
dim(diabetes$x)
diabetes$x[1:4,1:4]
diabetes$x[1:4,1:10]
x <- as.matrix(prostate[,1:8])
y <- prostate[,9]
lars(x, y)
