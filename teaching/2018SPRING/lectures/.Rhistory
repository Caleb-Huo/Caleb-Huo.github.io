al2n <- apply(vecDiff,2,l2n)
groupsDist[,k] <- al2n
}
groups <- apply(groupsDist,1,which.min)
data_train$groups <- as.factor(groups)
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centers, size=3)
## update centers
for(k in 1:K){
asubset <- d[groups==k,]
centers0[k,] <- colMeans(asubset)
}
centers <- as.data.frame(centers0)
colnames(centers) <- c("x", "y")
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centers, size=3)
set.seed(32611)
akmeans <- kmeans(d, centers = 3)
akmeans
centers
iter=0
centersALL <- data.frame(centers,iter=iter)
iter=iter + 1
centersALL <- rbind(centersALL, data.frame(centers,iter=iter))
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centers, size=3) +
geom_path(data=centersALL, group = iter) +
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centers, size=3) +
geom_path(data=centersALL, group = iter)
centersALL
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centersALL, size=3) +
geom_path(data=centersALL, group = iter)
<- 3
set.seed(32611)
centers0 <- mvrnorm(K, mu = c(0,0), Sigma = diag(c(1,1)))
centers <- as.data.frame(centers0)
colnames(centers) <- c("x", "y")
iter=0
centersALL <- data.frame(centers,iter=iter)
p + geom_point(data=centers, size=3)
l2n <- function(avec){
return(sqrt(sum(avec^2)))
}
## update group labels
groupsDist <- matrix(0,nrow=nrow(d),ncol=K)
for(k in 1:K){
vecDiff <- t(d) - centers0[k,]
al2n <- apply(vecDiff,2,l2n)
groupsDist[,k] <- al2n
}
groups <- apply(groupsDist,1,which.min)
data_train$groups <- as.factor(groups)
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centers, size=3)
## update centers
for(k in 1:K){
asubset <- d[groups==k,]
centers0[k,] <- colMeans(asubset)
}
centers <- as.data.frame(centers0)
colnames(centers) <- c("x", "y")
iter=iter + 1
centersALL <- rbind(centersALL, data.frame(centers,iter=iter))
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centersALL, size=3) +
geom_path(data=centersALL, group = iter)
K <- 3
set.seed(32611)
centers0 <- mvrnorm(K, mu = c(0,0), Sigma = diag(c(1,1)))
centers <- as.data.frame(centers0)
colnames(centers) <- c("x", "y")
centersALL <- data.frame(centers,order=1:K)
p + geom_point(data=centers, size=3)
l2n <- function(avec){
return(sqrt(sum(avec^2)))
}
## update group labels
groupsDist <- matrix(0,nrow=nrow(d),ncol=K)
for(k in 1:K){
vecDiff <- t(d) - centers0[k,]
al2n <- apply(vecDiff,2,l2n)
groupsDist[,k] <- al2n
}
groups <- apply(groupsDist,1,which.min)
data_train$groups <- as.factor(groups)
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centers, size=3)
## update centers
for(k in 1:K){
asubset <- d[groups==k,]
centers0[k,] <- colMeans(asubset)
}
centers <- as.data.frame(centers0)
colnames(centers) <- c("x", "y")
centersALL <- rbind(centersALL, data.frame(centers,order=1:K))
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centersALL, size=3) +
geom_path(data=centersALL, group = order)
centersALL
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centersALL, size=3)
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centersALL, size=3) +
geom_path(data=centersALL, group = order)
order
centersALL
K <- 3
set.seed(32611)
centers0 <- mvrnorm(K, mu = c(0,0), Sigma = diag(c(1,1)))
centers <- as.data.frame(centers0)
colnames(centers) <- c("x", "y")
centersALL <- data.frame(centers,anorder=1:K)
p + geom_point(data=centers, size=3)
l2n <- function(avec){
return(sqrt(sum(avec^2)))
}
## update group labels
groupsDist <- matrix(0,nrow=nrow(d),ncol=K)
for(k in 1:K){
vecDiff <- t(d) - centers0[k,]
al2n <- apply(vecDiff,2,l2n)
groupsDist[,k] <- al2n
}
groups <- apply(groupsDist,1,which.min)
data_train$groups <- as.factor(groups)
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centers, size=3)
## update centers
for(k in 1:K){
asubset <- d[groups==k,]
centers0[k,] <- colMeans(asubset)
}
centers <- as.data.frame(centers0)
colnames(centers) <- c("x", "y")
centersALL <- rbind(centersALL, data.frame(centers,anorder=1:K))
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centersALL, size=3) +
geom_path(data=centersALL, group = anorder)
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centersALL, size=3) +
geom_path(data=centersALL, group = centersALL$anorder)
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centersALL, size=3) +
geom_path(data=centersALL, aes(group =anorder))
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centersALL, aes(size=3, shape="X")) +
geom_path(data=centersALL, aes(group = anorder))
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centersALL, aes(size=3, shape="x")) +
geom_path(data=centersALL, aes(group = anorder))
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centersALL, aes(shape="x"), size=3) +
geom_path(data=centersALL, aes(group = anorder))
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centersALL, aes(size=3)) +
geom_path(data=centersALL, aes(group = anorder))
## update group labels
groupsDist <- matrix(0,nrow=nrow(d),ncol=K)
for(k in 1:K){
vecDiff <- t(d) - centers0[k,]
al2n <- apply(vecDiff,2,l2n)
groupsDist[,k] <- al2n
}
groups <- apply(groupsDist,1,which.min)
data_train$groups <- as.factor(groups)
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centers, size=3)
## update centers
for(k in 1:K){
asubset <- d[groups==k,]
centers0[k,] <- colMeans(asubset)
}
centers <- as.data.frame(centers0)
colnames(centers) <- c("x", "y")
centersALL <- rbind(centersALL, data.frame(centers,anorder=1:K))
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centersALL, aes(size=3)) +
geom_path(data=centersALL, aes(group = anorder))
## update group labels
groupsDist <- matrix(0,nrow=nrow(d),ncol=K)
for(k in 1:K){
vecDiff <- t(d) - centers0[k,]
al2n <- apply(vecDiff,2,l2n)
groupsDist[,k] <- al2n
}
groups <- apply(groupsDist,1,which.min)
data_train$groups <- as.factor(groups)
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centers, size=3)
## update centers
for(k in 1:K){
asubset <- d[groups==k,]
centers0[k,] <- colMeans(asubset)
}
centers <- as.data.frame(centers0)
colnames(centers) <- c("x", "y")
centersALL <- rbind(centersALL, data.frame(centers,anorder=1:K))
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=groups)) + geom_point(data=centersALL, aes(size=3)) +
geom_path(data=centersALL, aes(group = anorder))
akmeans
namesak
akmeans$centers
set.seed(32611)
akmeans <- kmeans(d, centers = 3)
kmeansCenters <- as.data.frame(akmeans$centers)
colnaems(kmeansCenters) <- c("x","y")
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=akmeans$cluster)) + geom_point(data=centersALL, aes(size=3))
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=as.factor(akmeans$cluster))) + geom_point(data=kmeansCenters, aes(size=3))
set.seed(32611)
akmeans <- kmeans(d, centers = 3)
kmeansCenters <- as.data.frame(akmeans$centers)
colnaems(kmeansCenters) <- c("x","y")
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=as.factor(akmeans$cluster))) + geom_point(data=kmeansCenters, aes(size=3))
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=as.factor(akmeans$cluster)))
kmeansCenters
colnaems(kmeansCenters) <- c("x","y")
set.seed(32611)
akmeans <- kmeans(d, centers = 3)
kmeansCenters <- as.data.frame(akmeans$centers)
colnames(kmeansCenters) <- c("x","y")
ggplot(data_train) + aes(x=x,y=y) + geom_point(aes(col=as.factor(akmeans$cluster))) + geom_point(data=kmeansCenters, aes(size=3))
set.seed(32611)
kmeans_iris <- kmeans(iris.data, 3)
iris.data <- iris[,1:4]
ir.pca <- prcomp(iris.data,
center = TRUE,
scale = TRUE)
PC1 <- ir.pca$x[,"PC1"]
PC2 <- ir.pca$x[,"PC2"]
variance <- ir.pca$sdev^2 / sum(ir.pca$sdev^2)
v1 <- paste0("variance: ",signif(variance[1] * 100,3), "%")
v2 <- paste0("variance: ",signif(variance[2] * 100,3), "%")
plot(PC1, PC2, col=as.numeric(iris$Species),pch=19, xlab=v1, ylab=v2)
legend("topright", legend = levels(iris$Species), col =  unique(iris$Species), pch = 19)
set.seed(32611)
kmeans_iris <- kmeans(iris.data, 3)
plot(PC1, PC2, col=as.numeric(iris$Species),pch=19, xlab=v1, ylab=v2)
legend("topright", legend = levels(iris$Species), col =  unique(iris$Species), pch = 19)
names(kmeans_iris)
plot(PC1, PC2, col=as.numeric(kmeans_iris$cluster),pch=19, xlab=v1, ylab=v2)
legend("topright", legend = levels(kmeans_iris$cluster), col =  unique(kmeans_iris$cluster), pch = 19)
plot(PC1, PC2, col=as.numeric(kmeans_iris$cluster),pch=19, xlab=v1, ylab=v2)
legend("topright", legend = unique(kmeans_iris$cluster), col =  unique(kmeans_iris$cluster), pch = 19)
par(mfrow=c(1,2))
plot(PC1, PC2, col=as.numeric(iris$Species),pch=19, xlab=v1, ylab=v2, main="true label")
legend("topright", legend = levels(iris$Species), col =  unique(iris$Species), pch = 19)
plot(PC1, PC2, col=as.numeric(kmeans_iris$cluster),pch=19, xlab=v1, ylab=v2, main="kmeans label")
legend("topright", legend = unique(kmeans_iris$cluster), col =  unique(kmeans_iris$cluster), pch = 19)
library(sparcl)
?sparck
?sparcl
set.seed(11)
x <- matrix(rnorm(50*70),ncol=70)
x[1:25,1:20] <- x[1:25,1:20]+1
x <- scale(x, TRUE, TRUE)
# run sparse k-means
km.out <- KMeansSparseCluster(x,K=2,wbounds=3)
print(km.out)
names(km.out)
km.out
km.out[[1]]
plot(km.out[[1]])
plot(km.out)
googl
library(MASS)
set.seed(32611)
N<-100
d1<-mvrnorm(N, c(0,3), matrix(c(2, 1, 1, 2), 2, 2))
d2<-mvrnorm(N, c(-2,-2), matrix(c(2, 1, 1, 2), 2, 2))
d3<-mvrnorm(N, c(2,-2), matrix(c(2, 1, 1, 2), 2, 2))
d <- rbind(d1, d2, d3)
label <- c(rep("1", N), rep("2", N), rep("3", N))
data_train <- data.frame(label=label, x=d[,1], y=d[,2])
names(data_train)<-c("label", "x", "y")
plot(d, color=as.numeric(label))
plot(d, col=as.numeric(label))
library(MASS)
set.seed(32611)
N<-100
d1<-mvrnorm(N, c(0,3), matrix(c(2, 1, 1, 2), 2, 2))
d2<-mvrnorm(N, c(-2,-2), matrix(c(2, 1, 1, 2), 2, 2))
d3<-mvrnorm(N, c(2,-2), matrix(c(2, 1, 1, 2), 2, 2))
d <- rbind(d1, d2, d3)
colnames(d) <- c("x", "u")
label <- c(rep("1", N), rep("2", N), rep("3", N))
data_train <- data.frame(label=label, x=d[,1], y=d[,2])
names(data_train)<-c("label", "x", "y")
plot(d, col=as.numeric(label))
legend("topleft", legend = unique(label), col=unique(as.numeric(label)))
legend("topleft", legend = unique(label), col=unique(as.numeric(label)), pch=1)
library(MASS)
library(ggplot2)
set.seed(32611)
N<-100
d1<-mvrnorm(N, c(0,3), matrix(c(2, 1, 1, 2), 2, 2))
d2<-mvrnorm(N, c(-2,-2), matrix(c(2, 1, 1, 2), 2, 2))
d3<-mvrnorm(N, c(2,-2), matrix(c(2, 1, 1, 2), 2, 2))
d <- rbind(d1, d2, d3)
colnames(d) <- c("x", "u")
label <- c(rep("1", N), rep("2", N), rep("3", N))
plot(d, col=as.numeric(label))
legend("topleft", legend = unique(label), col=unique(as.numeric(label)), pch=1)
K <- 3
set.seed(32611)
centers0 <- mvrnorm(K, mu = c(0,0), Sigma = diag(c(1,1)))
centers <- as.data.frame(centers0)
colnames(centers) <- c("x", "y")
centersALL <- data.frame(centers,anorder=1:K)
p + geom_point(data=centers, size=3)
K <- 3
set.seed(32611)
centers <- mvrnorm(K, mu = c(0,0), Sigma = diag(c(1,1)))
colnames(centers) <- c("x", "y")
plot(d)
points(centers)
plot(d)
points(centers, col = 1:3)
plot(d)
points(centers, col = 2:4, pch=9, cex=2)
## update group labels
groupsDist <- matrix(0,nrow=nrow(d),ncol=K)
for(k in 1:K){
vecDiff <- t(d) - centers[k,]
al2n <- apply(vecDiff,2,l2n)
groupsDist[,k] <- al2n
}
groups <- apply(groupsDist,1,which.min)
l2n <- function(avec){
return(sqrt(sum(avec^2)))
}
## update group labels
groupsDist <- matrix(0,nrow=nrow(d),ncol=K)
for(k in 1:K){
vecDiff <- t(d) - centers[k,]
al2n <- apply(vecDiff,2,l2n)
groupsDist[,k] <- al2n
}
groups <- apply(groupsDist,1,which.min)
groups
plot(d, col=groups + 1)
points(centers, col = 2:4, pch=9, cex=2)
plot(d, col=groups + 1)
points(centers, pch=9, cex=2)
plot(d)
points(centers, col = 2:4, pch=9, cex=2)
## update centers
for(k in 1:K){
asubset <- d[groups==k,]
centers[k,] <- colMeans(asubset)
}
plot(d)
points(centers, col = 2:4, pch=9, cex=2)
## update group labels
groupsDist <- matrix(0,nrow=nrow(d),ncol=K)
for(k in 1:K){
vecDiff <- t(d) - centers[k,]
al2n <- apply(vecDiff,2,l2n)
groupsDist[,k] <- al2n
}
groups <- apply(groupsDist,1,which.min)
plot(d, col=groups + 1)
points(centers, pch=9, cex=2)
## update centers
for(k in 1:K){
asubset <- d[groups==k,]
centers[k,] <- colMeans(asubset)
}
plot(d)
points(centers, col = 2:4, pch=9, cex=2)
## update group labels
groupsDist <- matrix(0,nrow=nrow(d),ncol=K)
for(k in 1:K){
vecDiff <- t(d) - centers[k,]
al2n <- apply(vecDiff,2,l2n)
groupsDist[,k] <- al2n
}
groups <- apply(groupsDist,1,which.min)
plot(d, col=groups + 1)
points(centers, pch=9, cex=2)
## update centers
for(k in 1:K){
asubset <- d[groups==k,]
centers[k,] <- colMeans(asubset)
}
plot(d)
points(centers, col = 2:4, pch=9, cex=2)
l2n <- function(avec){
return(sqrt(sum(avec^2)))
}
## update group labels
groupsDist <- matrix(0,nrow=nrow(d),ncol=K)
for(k in 1:K){
vecDiff <- t(d) - centers[k,]
al2n <- apply(vecDiff,2,l2n)
groupsDist[,k] <- al2n
}
groups <- apply(groupsDist,1,which.min)
plot(d, col=groups + 1)
points(centers, pch=9, cex=2)
## update centers
for(k in 1:K){
asubset <- d[groups==k,]
centers[k,] <- colMeans(asubset)
}
groups0 <- groups
plot(d)
points(centers, col = 2:4, pch=9, cex=2)
l2n <- function(avec){
return(sqrt(sum(avec^2)))
}
## update group labels
groupsDist <- matrix(0,nrow=nrow(d),ncol=K)
for(k in 1:K){
vecDiff <- t(d) - centers[k,]
al2n <- apply(vecDiff,2,l2n)
groupsDist[,k] <- al2n
}
groups <- apply(groupsDist,1,which.min)
plot(d, col=groups + 1)
points(centers, pch=9, cex=2)
## update centers
for(k in 1:K){
asubset <- d[groups==k,]
centers[k,] <- colMeans(asubset)
}
groups0 <- groups
plot(d)
points(centers, col = 2:4, pch=9, cex=2)
l2n <- function(avec){
return(sqrt(sum(avec^2)))
}
## update group labels
groupsDist <- matrix(0,nrow=nrow(d),ncol=K)
for(k in 1:K){
vecDiff <- t(d) - centers[k,]
al2n <- apply(vecDiff,2,l2n)
groupsDist[,k] <- al2n
}
groups <- apply(groupsDist,1,which.min)
plot(d, col=groups + 1)
points(centers, pch=9, cex=2)
## update centers
for(k in 1:K){
asubset <- d[groups==k,]
centers[k,] <- colMeans(asubset)
}
groups0 <- groups
plot(d)
points(centers, col = 2:4, pch=9, cex=2)
l2n <- function(avec){
return(sqrt(sum(avec^2)))
}
## update group labels
groupsDist <- matrix(0,nrow=nrow(d),ncol=K)
for(k in 1:K){
vecDiff <- t(d) - centers[k,]
al2n <- apply(vecDiff,2,l2n)
groupsDist[,k] <- al2n
}
groups <- apply(groupsDist,1,which.min)
plot(d, col=groups + 1)
points(centers, pch=9, cex=2)
## update centers
for(k in 1:K){
asubset <- d[groups==k,]
centers[k,] <- colMeans(asubset)
}
groups0 <- groups
plot(d)
points(centers, col = 2:4, pch=9, cex=2)
l2n <- function(avec){
return(sqrt(sum(avec^2)))
}
## update group labels
groupsDist <- matrix(0,nrow=nrow(d),ncol=K)
for(k in 1:K){
vecDiff <- t(d) - centers[k,]
al2n <- apply(vecDiff,2,l2n)
groupsDist[,k] <- al2n
}
groups <- apply(groupsDist,1,which.min)
plot(d, col=groups + 1)
points(centers, pch=9, cex=2)
## update centers
for(k in 1:K){
asubset <- d[groups==k,]
centers[k,] <- colMeans(asubset)
}
groups0 <- groups
plot(d)
points(centers, col = 2:4, pch=9, cex=2)
l2n <- function(avec){
return(sqrt(sum(avec^2)))
}
## update group labels
groupsDist <- matrix(0,nrow=nrow(d),ncol=K)
for(k in 1:K){
vecDiff <- t(d) - centers[k,]
al2n <- apply(vecDiff,2,l2n)
groupsDist[,k] <- al2n
}
groups <- apply(groupsDist,1,which.min)
plot(d, col=groups + 1)
points(centers, pch=9, cex=2)
## update centers
for(k in 1:K){
asubset <- d[groups==k,]
centers[k,] <- colMeans(asubset)
}
groups0 <- groups
plot(d)
points(centers, col = 2:4, pch=9, cex=2)
## update group labels
groupsDist <- matrix(0,nrow=nrow(d),ncol=K)
for(k in 1:K){
vecDiff <- t(d) - centers[k,]
al2n <- apply(vecDiff,2,l2n)
groupsDist[,k] <- al2n
}
groups <- apply(groupsDist,1,which.min)
all(groups == groups0)
set.seed(32611)
akmeans <- kmeans(d, centers = 3)
kmeansCenters <- akmeans$centers
colnames(kmeansCenters) <- c("x","y")
plot(d, col=akmeans$cluster + 1)
points(kmeansCenters, pch=9, cex=2)
head(d)
plot(d, pch = 19, col=as.numeric(label))
legend("topleft", legend = unique(label), col=unique(as.numeric(label)), pch=1)
plot(d, pch = 19, col=as.numeric(label))
legend("topleft", legend = unique(label), col=unique(as.numeric(label)), pch=19)
