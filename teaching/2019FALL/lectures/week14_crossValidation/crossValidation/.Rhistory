library(ElemStatLearn)
library(randomForest)
prostate0 <- prostate
prostate0
prostate0$svi <- as.factor(prostate0$svi)
K <- 5
folds <- cut(seq(1,nrow(prostate0)),breaks=5,labels=FALSE)
folds
EKs <- numeric(K)
for(k in 1:K){}
for(k in 1:K){
atrain <- subset(prostate0, folds != k)
atest <- subset(prostate0, folds == k)
krfFit <- randomForest(svi ~ ., data=atrain)
krfPred <- predict(krfFit, atest)
krfTable <- table(krfPred, truth=atest$svi)
EKs[k] <- 1 - sum(diag(krfTable))/sum(krfTable)
}
EKs
mean(EKs)
library(lars)
library(ggplot2)
options(stringsAsFactors=F)
x <- as.matrix(prostate[,1:8])
y <- prostate[,9]
lassoFit <- lars(x, y) ## lar for least angle regression
lassoFit
lambdas <- seq(0,5,0.5)
coefLassoFit <- coef(lassoFit, s=lambdas, mode="lambda")
coefLassoFit
adataFrame <- NULL
for(i in 1:ncol(coefLassoFit)){
acoef <- colnames(coefLassoFit)[i]
adataFrame0 <- data.frame(lambda=lambdas, coef = coefLassoFit[,i], variable=acoef)
adataFrame <- rbind(adataFrame, adataFrame0)
}
adataFrame
ggplot(adataFrame) + aes(x=lambda, y=coef, col=variable) +
geom_point() +
geom_path()
adata_train <- prostate0[trainLabel, -5]
adata_test <- prostate0[!trainLabel, -5]
alabel_train <- prostate0[trainLabel, 5]
alabel_test <- prostate0[!trainLabel, 5]
knnFit <- knn(adata_train, adata_test, alabel_train, k=5)
MASS:knn
MASS::knn
class::knn
library(class)
adata_train <- prostate0[trainLabel, -5]
adata_test <- prostate0[!trainLabel, -5]
alabel_train <- prostate0[trainLabel, 5]
alabel_test <- prostate0[!trainLabel, 5]
knnFit <- knn(adata_train, adata_test, alabel_train, k=5)
library(ElemStatLearn)
library(class)
prostate0 <- prostate
prostate0$svi <- as.factor(prostate0$svi)
trainLabel <- prostate$train
adata_train <- prostate0[trainLabel, -5]
adata_test <- prostate0[!trainLabel, -5]
alabel_train <- prostate0[trainLabel, 5]
alabel_test <- prostate0[!trainLabel, 5]
knnFit <- knn(adata_train, adata_test, alabel_train, k=5)
knnFit
knnTable <- table(knnFit, truth=alabel_test)
knnTable
library(MASS)
alda <- lda(label ~ . ,data=data_train)
avec <- seq(-4,4,0.1)
z <- expand.grid(avec, avec)
z <- data.frame(x=z[,1],y=z[,2])
predict_lda <- predict(alda, z)$class
library(MASS)
library(ggplot2)
set.seed(32611)
N<-100
d1<-mvrnorm(N, c(1,-1), matrix(c(2, 1, 1, 2), 2, 2))
d2<-mvrnorm(N, c(-1,1), matrix(c(2, 1, 1, 2), 2, 2))
d <- rbind(d1, d2)
label <- c(rep("1", N), rep("2", N))
data_train <- data.frame(label=label, x=d[,1], y=d[,2])
names(data_train)<-c("label", "x", "y")
ggplot(data_train) + aes(x=x,y=y,col=label) + geom_point() +  stat_ellipse()
library(MASS)
alda <- lda(label ~ . ,data=data_train)
avec <- seq(-4,4,0.1)
z <- expand.grid(avec, avec)
z <- data.frame(x=z[,1],y=z[,2])
predict_lda <- predict(alda, z)$class
avec
z
predict_lda <- predict(alda, z)$class
predict_lda
z_lda <- cbind(region=as.factor(predict_lda), z)
head(z_lda)
ggplot(z_lda) + aes(x=x,y=y,col=region) + geom_point(alpha = 0.4)  + geom_point(data = data_train, aes(x=x,y=y,col=label)) +
labs(title = "LDA boundary")
cut
cut(1:100)
cut(1:100, breaks = 5)
cut(1:100, breaks = 5)[[1]]
cut(1:100, breaks = 5, labels = FALSE)
library(lars)
options(stringsAsFactors=F)
x <- as.matrix(prostate[,1:8])
y <- prostate[,9]
lassoFit <- lars(x, y) ## lar for least angle regression
lambdas <- seq(0,5,0.5)
coefLassoFit <- coef(lassoFit, s=lambdas, mode="lambda")
adataFrame <- NULL
for(i in 1:ncol(coefLassoFit)){
acoef <- colnames(coefLassoFit)[i]
adataFrame0 <- data.frame(lambda=lambdas, coef = coefLassoFit[,i], variable=acoef)
adataFrame <- rbind(adataFrame, adataFrame0)
}
library(ElemStatLearn)
options(stringsAsFactors=F)
x <- as.matrix(prostate[,1:8])
y <- prostate[,9]
lassoFit <- lars(x, y) ## lar for least angle regression
lambdas <- seq(0,5,0.5)
coefLassoFit <- coef(lassoFit, s=lambdas, mode="lambda")
adataFrame <- NULL
for(i in 1:ncol(coefLassoFit)){
acoef <- colnames(coefLassoFit)[i]
adataFrame0 <- data.frame(lambda=lambdas, coef = coefLassoFit[,i], variable=acoef)
adataFrame <- rbind(adataFrame, adataFrame0)
}
adataFrame
acoef
coefLassoFit
